<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-4.1.xsd
            http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop-4.1.xsd"
	   default-autowire="byName" default-lazy-init="true">
	<aop:aspectj-autoproxy/>

	<context:property-placeholder location="classpath:sysConfig.properties" ignore-unresolvable="true" />
 	<!-- <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
          lazy-init="false">
        <property name="locations">
            <list>
                <value>classpath*:sysConfig.properties</value>
            </list>
        </property>
    </bean> -->
    
 	<!-- ApplicationContext -->
	<bean id="SpringContextHolder" class="com.leimingtech.common.utils.spring.SpringContextHolder" lazy-init="false" />

	<context:component-scan base-package="com.leimingtech.platform.core.interceptors" />
	<context:component-scan base-package="com.leimingtech.cms.interceptors" />

	<!-- 使用Annotation自动注册Bean，解决事物失效问题：在主容器中不扫描@Controller注解，在SpringMvc中只扫描@Controller注解。  -->
	<context:component-scan
			base-package="com.leimingtech.core.service,com.leimingtech.core.dao,com.leimingtech.platform.service
			,com.leimingtech.core,com.leimingtech.cms.service
			,com.leimingtech.mobile.service,com.leimingtech.wap.service,com.leimingtech.wechat.service
			,com.leimingtech.weibo,com.leimingtech.cms.tag"><!-- base-package 如果多个，用“,”分隔 -->
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
		p:defaultEncoding="UTF-8">
		<property name="maxUploadSize">
			<value>104857600</value>
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean>
	
	<bean id="realPathResolver" class="com.leimingtech.platform.tpl.ServletContextRealPathResolver"></bean>
	<!--文件模板-->
	<bean id="tplManager" class="com.leimingtech.platform.tpl.FileTplManagerImpl"/>

	<!-- 异常处理类 -->
	<bean id="exceptionHandler" class="com.leimingtech.common.MyExceptionHandler" />
	<!-- 系统错误转发配置[并记录错误日志] -->
	<bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="defaultErrorView" value="500"></property>   <!-- 默认为500，系统错误(error.jsp) -->
		<property name="defaultStatusCode" value="404"></property>
		<property name="statusCodes"><!-- 配置多个statusCode -->
			<props>
				<prop key="error">500</prop>  <!-- error.jsp -->
				<prop key="error1">404</prop>    <!-- error1.jsp -->
			</props>
		</property>
		<property name="exceptionMappings">
			<props>
				<!-- 这里你可以根据需要定义N多个错误异常转发 -->
				<prop key="java.sql.SQLException">dbError</prop> <!-- 数据库错误(dbError.jsp) -->
				<prop key="org.springframework.web.bind.ServletRequestBindingException">bizError</prop> <!-- 参数绑定错误(如：必须参数没传递)(bizError.jsp) -->
				<prop key="java.lang.IllegalArgumentException">bizError</prop>  <!-- 参数错误(bizError.jsp) -->
				<prop key="org.springframework.validation.BindException">bizError</prop>  <!-- 参数类型有误(bizError.jsp) -->
				<prop key="java.lang.Exception">unknowError</prop>  <!-- 其他错误为'未定义错误'(unknowError.jsp) -->
			</props>
		</property>
	</bean>

	<!-- 智能表单配置引入 -->
	<import resource="classpath*:applicationContext-*.xml" />
</beans>